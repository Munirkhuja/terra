services:
  laravel-backend:
    build: ./backend-laravel
    container_name: laravel-backend
    expose:
      - '9000'
    environment:
      DB_CONNECTION: pgsql
      DB_HOST: postgis-db
      DB_PORT: 5432
      DB_DATABASE: terra
      DB_USERNAME: terra
      DB_PASSWORD: terra
      KAFKA_BROKERS: kafka:9092
      KAFKA_CONSUMER_GROUP: ml-worker-group
      KAFKA_INPUT_TOPIC: images.tasks
      KAFKA_OUTPUT_TOPIC: images.results
      AWS_ACCESS_KEY_ID: minio
      AWS_SECRET_ACCESS_KEY: minio123
      AWS_BUCKET: uploads
      AWS_ENDPOINT: http://minio:9000
      REDIS_HOST: redis
      REDIS_PORT: 6379
      BROADCAST_DRIVER: pusher
      PUSHER_APP_ID: local
      PUSHER_APP_KEY: local
      PUSHER_APP_SECRET: local
      PUSHER_HOST: 127.0.0.1
      PUSHER_PORT: 6001
      PUSHER_SCHEME: http
      PUSHER_APP_CLUSTER: mt1
    volumes:
      - ./backend-laravel:/var/www/html
    depends_on:
      - postgis-db
      - kafka
      - python-ml
      - minio
      - redis
      - soketi
    restart: unless-stopped

  nginx:
    image: nginx:stable-alpine
    container_name: nginx
    ports:
      - "8000:80"
    volumes:
      - ./backend-laravel:/var/www/html
      - ./nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      - laravel-backend
    restart: unless-stopped

  soketi:
    image: quay.io/soketi/soketi:latest-16-alpine
    container_name: soketi
    environment:
      SOKETI_DEBUG: "1"
      SOKETI_METRICS_ENABLED: "1"
      SOKETI_METRICS_SERVER_PORT: "9601"
      SOKETI_DEFAULT_APP_ID: terra-local
      SOKETI_DEFAULT_APP_KEY: terra-local
      SOKETI_DEFAULT_APP_SECRET: terra-local
    ports:
      - "${SOKETI_PORT:-6001}:6001"
      - "${SOKETI_METRICS_SERVER_PORT:-9601}:9601"
    restart: always
    mem_limit: 1g

  python-ml:
    build: ./python-ml
    container_name: python-ml
    working_dir: /app
    command: python main.py
    volumes:
      - ./python-ml:/app
      - ./python-ml/models:/app/models
    environment:
      MODEL_PATH: /app/models/yolov8n.pt
      KAFKA_BROKERS: kafka:9092
      KAFKA_CONSUMER_GROUP: ml-worker-group
      KAFKA_INPUT_TOPIC: images.tasks
      KAFKA_OUTPUT_TOPIC: images.results
      MINIO_URL: http://minio:9000
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123
      MINIO_BUCKET: uploads
    depends_on:
      - kafka
      - minio
    restart: unless-stopped

  minio-init:
    image: minio/mc:RELEASE.2025-08-13T08-35-41Z-cpuv1
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      mc alias set myminio http://minio:9000 ${MINIO_ROOT_USER:-minio} ${MINIO_ROOT_PASSWORD:-minio123} || true;
      until mc ls myminio >/dev/null 2>&1; do
        echo 'Waiting for MinIO...';
        sleep 2;
      done;
      mc mb --ignore-existing myminio/uploads;
      mc anonymous set public myminio/uploads;
      echo 'Bucket created';
      "

  minio:
    image: minio/minio:RELEASE.2025-09-07T16-13-09Z-cpuv1
    container_name: minio
    ports:
      - "9093:9000" # API
      - "9091:9001" # Web UI
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    command: server --console-address ":9001" /data
    volumes:
      - ./minio/data:/data
    restart: always

  postgis-db:
    build: ./db
    container_name: postgis-db
    environment:
      POSTGRES_USER: terra
      POSTGRES_PASSWORD: terra
      POSTGRES_DB: terra
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: unless-stopped

  redis:
    image: redis:7.2-alpine
    container_name: redis
    ports:
      - "6379:6379"
    restart: unless-stopped

  kafka:
    image: public.ecr.aws/bitnami/kafka:3.7
    restart: always
    ports:
      - '9092:9094'
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:9092,EXTERNAL://:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT

  kafka-ui:
    image: provectuslabs/kafka-ui:v0.7.2
    restart: always
    ports:
      - '8085:8080'
    environment:
      - DYNAMIC_CONFIG_ENABLED=true
      #- SERVER_SERVLET_CONTEXT_PATH=/kafka
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - CONNECT_CLUSTERS_0_NAME=local
      - CONNECT_CLUSTERS_0_URL=http://kafka:8083
    depends_on:
      - kafka

  php-fpm_exporter:
    image: hipages/php-fpm_exporter:2
    container_name: php-fpm_exporter
    command:
      - "--phpfpm.scrape-uri=tcp://laravel-backend:9000/status"
    ports:
      - "9253:9253"
    depends_on:
      - laravel-backend
    restart: always

  nginx_exporter:
    image: nginx/nginx-prometheus-exporter:1.5.1
    container_name: nginx_exporter
    command:
      - "-nginx.scrape-uri=http://nginx/stub_status"
    ports:
      - "9113:9113"
    depends_on:
      - nginx
    restart: always

  redis_exporter:
    image: oliver006/redis_exporter:v1.79.0-alpine
    container_name: redis_exporter
    environment:
      - REDIS_ADDR=redis:6379
    ports:
      - "9121:9121"
    depends_on:
      - redis
    restart: always

  prometheus:
    image: prom/prometheus:v2.49.0
    container_name: prometheus
    restart: always
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.retention.size=1GB'
    ports:
      - "9090:9090"
    depends_on:
      - nginx_exporter
      - php-fpm_exporter
      - redis_exporter
      - soketi
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana:10.4.0
    container_name: grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=terra-admin
    ports:
      - "3000:3000"
    depends_on:
      - prometheus

volumes:
  pgdata:
  minio_data: