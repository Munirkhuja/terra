name: Terra CI/CD
name: CI/CD Pipeline

on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]

jobs:

  # 1. Проверка кода Laravel
  laravel-tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgis/postgis:15-3.3
        env:
          POSTGRES_USER: terra
          POSTGRES_PASSWORD: terra
          POSTGRES_DB: terra
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U terra" 
          --health-interval=10s 
          --health-timeout=5s 
          --health-retries=5
    steps:
      - uses: actions/checkout@v3

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          extensions: mbstring, pdo, pgsql, bcmath, curl, xml

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-progress --no-interaction

      - name: Copy .env
        run: cp backend-laravel/.env.example backend-laravel/.env

      - name: Wait for Postgres
        run: until pg_isready -h localhost -p 5432 -U terra; do sleep 2; done

      - name: Run migrations
        run: php artisan migrate --force

      - name: Run tests
        run: php artisan test

  # 2. Проверка Python ML
  python-ml-tests:
    runs-on: ubuntu-latest
    services:
      kafka:
        image: bitnami/kafka:latest
        env:
          KAFKA_BROKER_ID: 1
          KAFKA_ZOOKEEPER_CONNECT: localhost:2181
          ALLOW_PLAINTEXT_LISTENER: "yes"
        ports:
          - 9092:9092
      zookeeper:
        image: bitnami/zookeeper:latest
        ports:
          - 2181:2181
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.10

      - name: Install dependencies
        run: |
          pip install -r python-ml/requirements.txt

      - name: Run ML test script
        run: python python-ml/test_model.py
